[{"content":"Installtion of Docker: The docker package is not available in the default package manager. So we have to add the package in the repo by the following commands: Update the apt package index and install packages to allow apt to use a repository over HTTPS: sudo apt-get update sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release Add Docker’s official GPG key: sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg Use the following command to set up the repository: echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null Now the docker package has been installed in the repository. And now we can download and install Docker. sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin To check if Docker is installed correctly your can check by successfully running the hello-world image.\nsudo docker run hello-world Installing and setting up portainer: For installing Portainer. We first need to create a volume named portainer_data. docker volume create portainer_data Then, we need to download and install the Portainer Server container: docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest Portainer Server has now been installed. You can check to see whether the Portainer Server container has started by running docker ps:\nroot@server:~# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f4ab79732007 portainer/portainer-ee:latest \u0026#34;/portainer\u0026#34; 2 weeks ago Up 29 hours 0.0.0.0:8000-\u0026gt;8000/tcp, :::8000-\u0026gt;8000/tcp, 0.0.0.0:9443-\u0026gt;9000/tcp, :::9443-\u0026gt;9443/tcp portainer Now that the installation is complete, you can log into your Portainer Server instance by opening a web browser and going to:\nhttps://localhost:9443 If your are connecting to a remote server change localhost to relavent ip address. \\\nIf you want to install portainer in different port: Then while installing instead of -p 9443:9443 type -p port-of-yourchoice:9443.\ndocker run -d -p 8000:8000 -p port-of-yourchoice:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest Then you can complete the installation by loging into Portainer Server instance by opening a web browser and going to:\nhttps://localhost:9443 Done.\nThanks. ","permalink":"https://anirudhya.com/posts/portainer/","summary":"Installtion of Docker: The docker package is not available in the default package manager. So we have to add the package in the repo by the following commands: Update the apt package index and install packages to allow apt to use a repository over HTTPS: sudo apt-get update sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release Add Docker’s official GPG key: sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.","title":"Installation of Docker and Portainer"},{"content":"This is a tutorial how to create personal access token from github and configure your github client to use it. This will be done in 2 steps: Create a access token. Add the token to your git client. Step 1 [Creating github token]: Go to your github account settings. Go to Developer Setting at the bottom. Go to Personal Access token and create a Tokens(classic) Fill the information and copy the token The token will be like this ghp_JCEAUrOjKjdicbjshrv50Dasdfkv Step 2 [Adding the token to your client] For Windows: Go to Credential Manager from Control Panel \u0026gt; Windows Credentials \u0026gt; find git:https://github.com \u0026gt; Edit \u0026gt; On Password replace with with your GitHub Personal Access Token \u0026gt; You are Done.\nIf you don’t find git:https://github.com =\u0026gt; Click on Add a generic credential =\u0026gt; Internet address will be git:https://github.com and you need to type in your username and password will be your GitHub Personal Access Token =\u0026gt; Click Ok and you are Done.\nFor Macos Click on the Spotlight icon (magnifying glass) on the right side of the menu bar. Type Keychain access then press the Enter key to launch the app \u0026gt; In Keychain Access, search for github.com \u0026gt; Find the internet password entry for github.com \u0026gt; Edit or delete the entry accordingly \u0026gt; You are Done.\nFor Linux(git) For Linux, you need to configure the local GIT client with a username and email address, for this install the github-cli tool from install. Then check if the cli tool is installed with this command: gh version Then paste the following command: gh auth login Then choose where you want to store the token\n➜ ~ gh auth login ? What account do you want to log into? [Use arrows to move, type to filter] \u0026gt; GitHub.com GitHub Enterprise Server Then it will ask if you want to configure with HTTPS or SSH ? What is your preferred protocol for Git operations? [Use arrows to move, type to filter] \u0026gt; HTTPS SSH We will choose HTTPS\nIt will ask if we want to authenticate the git. ? Authenticate Git with your GitHub credentials? (Y/n) We will type Y and press enter\nThen we will be asked if we want to authenticate with we browser login or github token. We will choose with token. ? How would you like to authenticate GitHub CLI? [Use arrows to move, type to filter] Login with a web browser \u0026gt; Paste an authentication token Then paste the token you got from before: ? Paste your authentication token: **************************************** Then it will show you the config is successful. - gh config set -h github.com git_protocol https ✓ Configured git protocol ✓ Logged in as Abxy After that we need to tell git to use the gh token. gh auth setup-git Then we need to add our email and username to git. git config --global user.email \u0026#34;you@example.com\u0026#34; git config --global user.name \u0026#34;Your Name\u0026#34; Done.\nThanks ","permalink":"https://anirudhya.com/posts/github-token/","summary":"This is a tutorial how to create personal access token from github and configure your github client to use it. This will be done in 2 steps: Create a access token. Add the token to your git client. Step 1 [Creating github token]: Go to your github account settings. Go to Developer Setting at the bottom. Go to Personal Access token and create a Tokens(classic) Fill the information and copy the token The token will be like this ghp_JCEAUrOjKjdicbjshrv50Dasdfkv Step 2 [Adding the token to your client] For Windows: Go to Credential Manager from Control Panel \u0026gt; Windows Credentials \u0026gt; find git:https://github.","title":"Github Token"},{"content":"This is my first time using hugo for static site generator for my personal use\n","permalink":"https://anirudhya.com/posts/test/","summary":"This is my first time using hugo for static site generator for my personal use","title":"Test"}]